
/*
* Extracts the front and back propagation sequences from "base_sequences". The new
* sequences will have the prefix "front_" and "back_".
* The macro beam_"base_sequence"() has to be defined.
* @param base_seq: Sequence from which the subsequence should be extracted.
* @param startfrom: Initial element in the subsequence.
* @param endat: Final element in the subsequence.
* @param extracted_name: Extracted sequence name.
*/
extract_segment_sequence(base_seq, front_seq, back_seq, start_from, end_at): macro = {

    ! There are some BPMs that have a non-zero size, these are not good as segment
    ! start or end. These two if's replace them with zero sized BPMs.
    if (start_from->l > 0){
        start_from: MONITOR, l=0;

        SEQEDIT, SEQUENCE=base_seq;
        REPLACE, ELEMENT=start_from, by=start_from;
        ENDEDIT;
    }

    if (end_at->l > 0){
        end_at: MONITOR, l=0;

        SEQEDIT, SEQUENCE=base_seq;
        REPLACE, ELEMENT=end_at, by=end_at;
        ENDEDIT;
    }

    SEQEDIT, SEQUENCE=base_seq;
    FLATTEN;
    CYCLE, START=start_from;
    ENDEDIT;

    EXTRACT, SEQUENCE=base_seq, FROM=start_from, TO=end_at, NEWNAME=front_seq;
    SEQEDIT, SEQUENCE=front_seq;
    FLATTEN;
    ENDEDIT;

    EXTRACT, SEQUENCE=base_seq, FROM=start_from, TO=end_at, NEWNAME=back_seq;
    SEQEDIT, SEQUENCE=back_seq;
    FLATTEN;
    REFLECT; ! reverse command
    ENDEDIT;
};


/*
* Sets the beam corresponding to LHC beam 1 to "accel".
*/
beam_LHCB1(accel): macro = {
    beam, particle = proton, sequence=accel, energy = 450.0, bv=1;
};


/*
* Sets the beam corresponding to LHC beam 2 to "accel".
*/
beam_LHCB2(accel): macro = {
    beam, particle = proton, sequence=accel, energy = 450.0, bv=-1;
};


/*
* Creates a twiss file containing only the first and last element on the segment.
* @param accel: Sequence to use.
* @param startfrom: First element of the sequence.
* @param endat: Last element of the sequence.
* @param start_end_point_file: File to write to.
*/
start_and_end_point_twiss(accel, startfrom, endat, start_end_point_file): macro = {
    use, period = accel;
    select, flag = twiss, clear;
    select, flag = twiss, range = endat;
    select, flag = twiss, range = startfrom, column = name, s, betx, alfx, bety, alfy, mux, muy, dx, r11, r12, r22, r21, x, y, dx, dy, dpx, dpy, wx, phix, wy, phiy;
    twiss, file = start_end_point_file;
}

/*
* Read the file given in "values_file" and writes the initial and final conditions
* in the segment delimited from the element "startfrom" to "endat" into "bininame"
* and "bendname" respectively.
*/
save_initial_and_final_values(accel, startfrom, endat, values_file, bininame, bendname): macro = {
    call, file = values_file;

    use, period=accel, range=startfrom/startfrom;
    savebeta,label=bininame, place=startfrom;
    twiss, chrom, betx=betx_ini, alfx=alfx_ini, bety=bety_ini, alfy=alfy_ini,
                  dx=dx_ini, dy=dy_ini, dpx=dpx_ini, dpy=dpy_ini,
                  wx=wx_ini, phix=phix_ini, wy=wy_ini, phiy=phiy_ini,
                  r11=ini_r11 ,r12=ini_r12, r21=ini_r21, r22=ini_r22;

    use, period=accel, range=endat/endat;
    savebeta,label=bendname, place=endat;
    twiss, chrom, betx=betx_end, alfx=alfx_end, bety=bety_end, alfy=alfy_end,
                  dx=dx_end, dy=dy_end, dpx=dpx_end, dpy=dpy_end,
                  wx=wx_end, phix=phix_end, wy=wy_end, phiy=phiy_end,
                  r11=end_r11 ,r12=end_r12, r21=end_r21, r22=end_r22;
}


/*
* Performs the twiss command over the front and back sequences, using the given
* initial conditions.
* @param accel: Sequence to use.
* @param front_filename: File were to store the front propagation twiss result.
* @param back_filename: File were to store the back propagation twiss result.
* @param bininame: Name of the initial conditions variable for front propagation.
* @param bendname: Name of the initial conditions variable for back propagation.
*/
twiss_segment(sequence, filename, init_vals): macro = {
    use, period = sequence;
    exec, select_elements();
    twiss, beta0 = init_vals, chrom, file = filename;
};

